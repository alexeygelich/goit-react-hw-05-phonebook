{"version":3,"sources":["components/FormAddContacts/FormAddContacts.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/FormAddContacts/index.js","components/FormAddContacts/FormAddContacts.jsx","components/Filter/Filter.jsx","components/Filter/index.js","components/ContactItem/index.js","components/ContactItem/ContactItem.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Alert/index.js","components/Alert/Alert.jsx","components/Container/index.js","components/Container/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FormAddContacts","state","name","number","handleChangeName","setState","handleChangeNumber","handleClearForm","this","addContact","props","nameApp","numberApp","className","styles","form","onSubmit","e","label","type","placeholder","value","onChange","target","button","Component","Filter","defaultProps","Contacts","el","handleDelete","id","listItem","onClick","ContactList","visibleContact","TransitionGroup","component","map","CSSTransition","timeout","classNames","Alert","Container","children","conactsBase","App","contacts","filter","isAdded","preventDefault","forEach","setTimeout","item","uuid","prevState","handleChangeFilter","handleFindContact","getFiteredContact","contact","toLowerCase","includes","localContacts","JSON","parse","localStorage","getItem","prevProps","PrevState","stringify","setItem","in","appear","unmountOnExit","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59e3f1f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddContacts_form__2MdXG\",\"label\":\"FormAddContacts_label__2GkhV\",\"button\":\"FormAddContacts_button__2dp95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__ZX0Xm\",\"button\":\"ContactItem_button__1siMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\"};","import FormAddContacts from './FormAddContacts';\n\nexport default FormAddContacts;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./FormAddContacts.module.css\";\n\nclass FormAddContacts extends Component {\n  static propTypes = {\n    addContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChangeName = (name) => {\n    this.setState({ name });\n  };\n\n  handleChangeNumber = (number) => {\n    this.setState({ number });\n  };\n\n  handleClearForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n    const nameApp = this.state.name;\n    const numberApp = this.state.number;\n    return (\n      <form\n        className={styles.form}\n        onSubmit={(e) => {\n          this.handleClearForm();\n          return addContact(e, nameApp, numberApp);\n        }}\n      >\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Name Surname\"\n            value={name}\n            onChange={(e) => this.handleChangeName(e.target.value)}\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"number\"\n            placeholder=\"Phone\"\n            value={number}\n            onChange={(e) => this.handleChangeNumber(e.target.value)}\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default FormAddContacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find Contacts\n    <input type=\"text\" placeholder=\"name\" value={value} onChange={(e) => onChange(e.target.value)} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nFilter.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Filter;\n","import Filter from './Filter';\n\nexport default Filter;\n","import Contacts from './ContactItem';\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ el, handleDelete }) => {\n  const { name, number, id } = el;\n  return (\n    <li className={styles.listItem}>\n      <span>{name}:</span> <span>{number}</span>\n      <button className={styles.button} type=\"button\" onClick={() => handleDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  el: PropTypes.object.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactList from './ContactList';\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ visibleContact, handleDelete }) => (\n  <TransitionGroup component=\"ul\" className=\"contact-list\">\n    {visibleContact.map((el) => {\n      return (\n        <CSSTransition key={el.id} timeout={500} classNames=\"item\">\n          <ContactItem el={el} handleDelete={handleDelete} />\n        </CSSTransition>\n      );\n    })}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  visibleContact: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import Alert from './Alert';\n\nexport default Alert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Alert.css'\n\nconst Alert = (props) => <div className=\"AlertWrapper\">Contact already exist</div>;\n\nexport default Alert;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({children}) => (\n  <div className=\"ContainerWrapper\">\n    {children}\n  </div>\n);\n\n\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport FormAddContacts from \"./components/FormAddContacts\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Alert from \"./components/Alert\";\nimport Container from \"./components/Container\";\nimport \"./App.css\";\n\nconst conactsBase = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    isAdded: false,\n  };\n\n  componentDidMount() {\n    const localContacts = JSON.parse(localStorage.getItem(\"contacts\")) || conactsBase;\n    if (localContacts) {\n      this.setState({\n        contacts: localContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, PrevState) {\n    if (PrevState.contacts !== this.state.contacts) {\n      const localContacts = JSON.stringify(this.state.contacts);\n      localStorage.setItem(\"contacts\", localContacts);\n    }\n  }\n\n  addContact = (e, name, number) => {\n    e.preventDefault();\n\n    this.state.contacts.forEach((el) => {\n      if (el.name === name) {\n        this.setState({ isAdded: true });\n        setTimeout(() => {\n          this.setState({ isAdded: false });\n        }, 1000);\n        return;\n      }\n    });\n    if (this.state.isAdded) {\n      return;\n    }\n    const item = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n    this.setState((prevState) => ({ contacts: [...prevState.contacts, item], name: \"\", number: \"\" }));\n  };\n\n  handleChangeFilter = ({ value }) => {\n    this.setState({\n      filter: value,\n    });\n  };\n\n  handleFindContact = (filter) => {\n    this.setState({ filter });\n  };\n\n  getFiteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  handleDelete = (id) => {\n    return this.setState((prevState) => ({ contacts: prevState.contacts.filter((contact) => contact.id !== id) }));\n  };\n\n  render() {\n    const { filter, isAdded, contacts } = this.state;\n    const visibleContact = this.getFiteredContact();\n    return (\n      <Container>\n        <section>\n          <CSSTransition in={true} appear={true} timeout={500} classNames=\"fade-logo\" unmountOnExit>\n            <h2 className=\"logo\">Phonebook</h2>\n          </CSSTransition>\n          <FormAddContacts addContact={this.addContact} />\n        </section>\n        <section>\n          <h2>Contacts</h2>\n          <CSSTransition in={contacts.length > 1} timeout={500} classNames=\"fade-filter\" unmountOnExit>\n            <Filter value={filter} onChange={this.handleFindContact} />\n          </CSSTransition>\n\n          <ContactList visibleContact={visibleContact} handleDelete={this.handleDelete} />\n          <CSSTransition in={isAdded} timeout={500} classNames=\"fade-alert\" unmountOnExit>\n            <Alert />\n          </CSSTransition>\n        </section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}